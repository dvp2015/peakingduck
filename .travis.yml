language: cpp
sudo: true
dist: bionic

# Define the build matrix
#compiler:
#  - gcc
#  - clang

#os:
#  - linux

env:
#  jobs:
#    - BUILD_TYPE=Debug
#    - BUILD_TYPE=Release
#    - BUILD_TYPE=Install
  global:
    PYTHONPATH: ${TRAVIS_BUILD_DIR}/build/py
    PY_CMD: python3
    LD_LIBRARY_PATH: /usr/lib/llvm-7/lib/

# Define some additional jobs building on MacOS
jobs:
  include:
    - os: osx
      osx_image: xcode11
      compiler: gcc
      env:
        CC: gcc-9
        CXX: g++-9
        BUILD_TYPE: Release
#    - os: osx
#      osx_image: xcode11
#      compiler: clang
#      env:
#        BUILD_TYPE: Release
#    - os: osx
#      osx_image: xcode11
#      compiler: clang
#      env:
#        BUILD_TYPE: Install
    - os: linux
      compiler: gcc
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test']
#          packages: ['g++-5']
      env:
        CC: g++-5
        CXX: g++-5
        BUILD_TYPE: Release
    - os: linux
      compiler: gcc
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test']
#          packages: ['g++-6']
      env:
        CC: g++-6
        CXX: g++-6
        BUILD_TYPE: Release
    - os: linux
      compiler: gcc
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test']
#          packages: ['g++-8']
      env:
        CC: g++-8
        CXX: g++-8
        BUILD_TYPE: Release
    - os: linux
      compiler: gcc
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test']
#          packages: ['g++-9']
      env:
        CC: g++-9
        CXX: g++-9
        BUILD_TYPE: Release
#   - os: linux
#      compiler: clang
#      addons:
#        apt:
#          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-precise-3.6']
#          packages: ['clang-3.4']
#      env: COMPILER=clang++-3.6
        
# Handle git submodules yourself
git:
  submodules: false

# Only run on master  
branches:
  only:
  - master
  - develop

# Use sed to replace the SSH URL with the public URL, then initialize submodules
before_install:
  - sed -i.bak 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
  - $PY_CMD --version
  - $PY_CMD -m pip install --user --upgrade pip wheel setuptools

addons:
  apt:
   packages:
      - python3-dev
      - python3-pip
      - python3-setuptools
      - lcov
      - libclang-7-dev
 

install:
  - $PY_CMD -m pip install --user -r requirements.dev.txt
  - $PY_CMD -m pip install --user -r requirements.txt
  - apt-get install ${CXX}

script:
  - ${CXX} --version
  - cd ${TRAVIS_BUILD_DIR}
  - ./.travis_script.sh

after_success:
  # Skip this unless on a debug build
  - if [ ${BUILD_TYPE} != "Debug" ]; then exit 0; fi
  - if [ ${TRAVIS_OS_NAME} != "linux" ]; then exit 0; fi
  - cd ${TRAVIS_BUILD_DIR}/build_coverage
  # Capture coverage info
  - lcov --directory . --capture --output-file coverage.info
  # Filter out system libraries and dependencies
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info
  - lcov --remove coverage.info '${TRAVIS_BUILD_DIR}/thirdparty/*' --output-file coverage.info
  # Print coverage stats to the screen, for debug purposes
  - lcov --list coverage.info
  - $PY_CMD -m coverage report
  # Upload report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
